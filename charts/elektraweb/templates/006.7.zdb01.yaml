{{ if .Values.sql.runCreationScripts }}
kind: Job
apiVersion: batch/v1
metadata:
  name: sql-create-zdb01
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-30"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      imagePullSecrets:
        - name: regcred
      containers:
        - name: initial-creator
          image: ghcr.io/travelaps/mssql2019fts:v2
          command:
            - /opt/mssql-tools/bin/sqlcmd
          args:
            - '-S'
            - {{ .Values.sql.connection.server }},{{ .Values.sql.connection.port }}
            - '-U'
            - {{ .Values.sql.connection.user }}
            - '-P'
            - {{ .Values.sql.connection.password }}
            - '-Q'
            - |
                CREATE DATABASE [ZDB01] COLLATE TURKISH_CI_AS
                GO
                USE [ZDB01]
                GO
                /****** Object:  Table [dbo].[HOTEL_PIN]    Script Date: 04.11.2021 9:35:11 AM ******/
                SET ANSI_NULLS ON
                GO
                SET QUOTED_IDENTIFIER ON
                GO
                CREATE TABLE [dbo].[HOTEL_PIN](
                    [HOTELID] [int] NOT NULL,
                    [PINCODE] [binary](64) NOT NULL,
                    [CREATEDATE] [datetime] NOT NULL,
                PRIMARY KEY CLUSTERED
                (
                    [HOTELID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
                ) ON [PRIMARY]
                GO
                /****** Object:  Table [dbo].[RES_CCARD]    Script Date: 04.11.2021 9:35:12 AM ******/
                SET ANSI_NULLS ON
                GO
                SET QUOTED_IDENTIFIER ON
                GO
                CREATE TABLE [dbo].[RES_CCARD](
                    [ID] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
                    [CCNO] [nvarchar](250) NULL,
                    [CCNAME] [nvarchar](250) NULL,
                    [CCCV2] [nvarchar](250) NULL,
                    [CCAUTHNO] [nvarchar](250) NULL,
                    [CCAUTHAMOUNT] [decimal](19, 4) NULL,
                    [RESID] [int] NULL,
                    [ISDISABLED] [bit] NULL,
                    [ISDELETED] [bit] NULL,
                    [CREATION_DATE] [datetime] NULL,
                    [LASTUPDATE_DATE] [datetime] NULL,
                    [CCVALIDMONTH] [nvarchar](250) NULL,
                    [CCVALIDYEAR] [nvarchar](250) NULL,
                    [HOTELID] [int] NOT NULL,
                    [TRANSACTIONID] [int] NULL,
                    [PORTALID] [int] NOT NULL,
                    [ISDEFAULT] [bit] NOT NULL,
                 CONSTRAINT [PK_RES_CCARD] PRIMARY KEY CLUSTERED
                (
                    [ID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = OFF, FILLFACTOR = 90, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
                ) ON [PRIMARY]
                GO
                /****** Object:  Index [IX_RESID]    Script Date: 04.11.2021 9:35:12 AM ******/
                CREATE NONCLUSTERED INDEX [IX_RESID] ON [dbo].[RES_CCARD]
                (
                    [RESID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
                GO
                ALTER TABLE [dbo].[HOTEL_PIN] ADD  DEFAULT (getutcdate()) FOR [CREATEDATE]
                GO
                ALTER TABLE [dbo].[RES_CCARD] ADD  DEFAULT (getutcdate()) FOR [CREATION_DATE]
                GO
                ALTER TABLE [dbo].[RES_CCARD] ADD  DEFAULT (getutcdate()) FOR [LASTUPDATE_DATE]
                GO
                ALTER TABLE [dbo].[RES_CCARD] ADD  CONSTRAINT [DF_9D46CC6A_8719_42D2_9566_4730F7D7EE15]  DEFAULT ((0)) FOR [HOTELID]
                GO
                ALTER TABLE [dbo].[RES_CCARD] ADD  CONSTRAINT [DF__RES_CCARD__PORTA__5007AB49]  DEFAULT ((1)) FOR [PORTALID]
                GO
                ALTER TABLE [dbo].[RES_CCARD] ADD  DEFAULT ((0)) FOR [ISDEFAULT]
                GO
                /****** Object:  StoredProcedure [dbo].[SP_GET_CCARD]    Script Date: 04.11.2021 9:35:12 AM ******/
                SET ANSI_NULLS ON
                GO
                SET QUOTED_IDENTIFIER ON
                GO
                CREATE PROCEDURE [dbo].[SP_GET_CCARD] @ID INT , @HOTELID INT,@RESCARDDISPLAYPIN nvarchar(100) = NULL
                AS

                 DECLARE @KEYWORD NVARCHAR(MAX) = 0x25002A006A004D00650064006A00540023003F0039004C00570067006A00
                 SET @KEYWORD = @KEYWORD+CAST(@ID AS NVARCHAR(20))
                 DECLARE @VARIABLES nvarchar(MAX)

                 --2020-11-04:OGUZ:SALTING
                 SET @RESCARDDISPLAYPIN += CAST(@HOTELID AS NVARCHAR(14))
                 SET @RESCARDDISPLAYPIN += 'lL!'

                --2020-01-28:OGUZ
                DECLARE @PINSHOULDBE BINARY(64) = (SELECT TOP(1) PINCODE FROM HOTEL_PIN WITH(NOLOCK) WHERE HOTELID = @HOTELID)

                IF @PINSHOULDBE IS NULL
                BEGIN
                    ;THROW 51000,'Please set your pin first',1
                END
                ELSE IF @PINSHOULDBE <> HASHBYTES('SHA2_512',ISNULL(@RESCARDDISPLAYPIN,''))
                BEGIN
                    ;THROW 51000,'Wrong pin',1
                END
                ELSE
                BEGIN
                    SELECT
                        TOP 1
                        @VARIABLES = ''
                            +ISNULL(CONVERT(NVARCHAR,DECRYPTBYPASSPHRASE(@KEYWORD,CCNO)),'')+';'
                            +ISNULL(CONVERT(NVARCHAR,DECRYPTBYPASSPHRASE(@KEYWORD,CCNAME)),'')+';'
                            +ISNULL(CONVERT(NVARCHAR,DECRYPTBYPASSPHRASE(@KEYWORD,CCCV2)),'')+';'
                            +ISNULL(CONVERT(NVARCHAR,CCAUTHNO),'')+';'
                            +ISNULL(CONVERT(NVARCHAR,CCAUTHAMOUNT),'')+';'
                            +ISNULL(CONVERT(NVARCHAR,DECRYPTBYPASSPHRASE(@KEYWORD,CCVALIDMONTH)),'')+';'
                            +ISNULL(CONVERT(NVARCHAR,DECRYPTBYPASSPHRASE(@KEYWORD,CCVALIDYEAR)),'')
                    FROM RES_CCARD WITH(NOLOCK)
                    WHERE ID = @ID AND HOTELID = @HOTELID

                    SELECT 'SP_RES_GET_CCARD' MSGCODE  , 1 AS SUCCESS , 0 AS GRIDREFRESH , @VARIABLES VARIABLES
                END
                GO
                /****** Object:  StoredProcedure [dbo].[SP_SET_HOTELPIN]    Script Date: 04.11.2021 9:35:12 AM ******/
                SET ANSI_NULLS ON
                GO
                SET QUOTED_IDENTIFIER ON
                GO
                CREATE PROC [dbo].[SP_SET_HOTELPIN]
                    @HOTELID INT,
                    @OLDPIN NVARCHAR(100)=null,
                    @NEWPIN NVARCHAR(100),
                    @STAFF  INT = NULL
                AS

                IF (SELECT PINCODE FROM HOTEL_PIN WITH(NOLOCK) WHERE HOTELID = @HOTELID) IS NULL
                AND ISNULL(@STAFF,0) >= 0
                    THROW 51000,'Your PIN code must be set by support team',1;

                IF  NOT EXISTS(SELECT TOP(1) 1 FROM EMDS.dbo.STDUSER WITH(NOLOCK) WHERE ID = @STAFF AND [2FASTATE] >= 3 )
                AND NOT EXISTS(SELECT TOP(1) 1 FROM ERSDEVELOPER.dbo.ANGUSDEVELOPER WITH(NOLOCK) WHERE ID = @STAFF AND [2FASTATE] >= 3 )
                    THROW 51000,'Your 2FA must be enabled to set credit card pincode',1
                IF LEN(ISNULL(@NEWPIN,'')) < 6
                    THROW 51000,'New pin must be at least 6 characters long',1
                IF @NEWPIN NOT LIKE '%[a-zA-Z]%'
                    THROW 51000,'New pin must contain at least 1 letter',1
                IF @NEWPIN NOT LIKE '%[0-9]%'
                    THROW 51000,'New pin must contain at least 1 number',1

                --2020-11-04:OGUZ:SALTING
                SET @NEWPIN += CAST(@HOTELID AS NVARCHAR(14))
                SET @NEWPIN += 'lL!'

                SET @OLDPIN += CAST(@HOTELID AS NVARCHAR(14))
                SET @OLDPIN += 'lL!'


                ;MERGE TOP(1) HOTEL_PIN AS T
                USING (SELECT @HOTELID AS HOTELID,HASHBYTES('SHA2_512',@OLDPIN) AS OLDPIN,HASHBYTES('SHA2_512',@NEWPIN) AS NEWPIN) AS  S
                ON T.HOTELID = S.HOTELID
                WHEN NOT MATCHED THEN INSERT(HOTELID,PINCODE)VALUES(S.HOTELID,S.NEWPIN)
                WHEN MATCHED AND T.PINCODE = S.OLDPIN THEN UPDATE SET T.PINCODE = S.NEWPIN;

                IF @@ROWCOUNT = 0
                    THROW 51000,'Old pincode was wrong',1
                GO
                /****** Object:  Trigger [dbo].[TRG_CC_ENCRYPT]    Script Date: 04.11.2021 9:35:12 AM ******/
                SET ANSI_NULLS ON
                GO
                SET QUOTED_IDENTIFIER ON
                GO

                CREATE TRIGGER [dbo].[TRG_CC_ENCRYPT] ON
                 [dbo].[RES_CCARD]
                 FOR INSERT,UPDATE AS  SET NOCOUNT ON

                 DECLARE @KEYWORD NVARCHAR(MAX) = 0x47003D00610053002D00460072004C002D00450034006B0050004A004C004000

                 UPDATE C
                 SET              /*YENI KAYIT VEYA (ESKI KAYIT VE GUNCELLENDI) */
                    C.CCNO = CASE WHEN d.ID IS NULL OR (d.ID IS NOT NULL AND UPDATE(CCNO))
                                  THEN EncryptByPassPhrase(K.KEYWORD,i.CCNO)
                                  ELSE C.CCNO END,
                    C.CCNAME = CASE WHEN d.ID IS NULL OR (d.ID IS NOT NULL AND UPDATE(CCNAME))
                                  THEN EncryptByPassPhrase(K.KEYWORD,i.CCNAME)
                                  ELSE C.CCNAME END,
                    C.CCVALIDMONTH = CASE WHEN d.ID IS NULL OR (d.ID IS NOT NULL AND UPDATE(CCVALIDMONTH))
                                  THEN EncryptByPassPhrase(K.KEYWORD,i.CCVALIDMONTH)
                                  ELSE C.CCVALIDMONTH END,
                    C.CCVALIDYEAR = CASE WHEN d.ID IS NULL OR (d.ID IS NOT NULL AND UPDATE(CCVALIDYEAR))
                                  THEN EncryptByPassPhrase(K.KEYWORD,i.CCVALIDYEAR)
                                  ELSE C.CCVALIDYEAR END,
                    C.CCCV2 = CASE WHEN d.ID IS NULL OR (d.ID IS NOT NULL AND UPDATE(CCCV2))
                                  THEN EncryptByPassPhrase(K.KEYWORD,i.CCCV2)
                                  ELSE C.CCCV2 END
                 FROM RES_CCARD C
                 INNER JOIN inserted  i ON i.ID = C.ID
                 LEFT  JOIN deleted   d ON i.ID = d.ID
                 OUTER APPLY(
                    SELECT [KEYWORD] = @KEYWORD+CAST(C.ID AS NVARCHAR(20))
                 )K
                GO
                ALTER TABLE [dbo].[RES_CCARD] ENABLE TRIGGER [TRG_CC_ENCRYPT]
                GO
{{ end }}
